{
	"info": {
		"_postman_id": "632e69-52cd-417a-a32a-752d4b0208",
		"name": "Author, positive, invalid",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34959014"
	},
	"item": [
		{
			"name": "list recipe by ID, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/123456789",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"123456789"
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by ID, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by ID, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by ID, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/!=/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"!=",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, long recipeID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"123456789\",\"author\": \"TesztElek\",\"commentBody\": \"Ez egy jó recept!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, null recipeId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"0\",\"author\": \"TesztElek\",\"commentBody\": \"Ez egy jó recept!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, empty recipeId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"\",\"author\": \"TesztElek\",\"commentBody\": \"Ez egy jó recept!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, invalid character recipeId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"%/\",\"author\": \"TesztElek\",\"commentBody\": \"Ez egy jó recept!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, empty author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"52\",\"author\": \"\",\"commentBody\": \"Ez egy jó recept!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, invalid character author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"52\",\"author\": \"!?%\",\"commentBody\": \"Ez egy jó recept!\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, long commentBody",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"52\",\"author\": \"TesztElek\",\"commentBody\": \"fhreferfhbejfbehjfbehbfehbfefefebjfhebvhejbehbeerfrfbehfeuifherfuohfuoifheufhebfvezgvbeihberfiuerfhberhzferfbgerfguzefbgerbfeubezhbeieufberuifrberiufberufiebfeufberfuhberfuiebfuerbfuerbferufbeufbefberuiebfeufberuzfberuzfberfbeuzfberfuzgerbfzuhberuzfbeuzfberuiferbfuerbfeuzrifberufberufierbgfuzerbfzurfbrzufbruzfruzfberuifberuzfberufzbeguzfberzuferbgfuierfbgerufbgeruzfbgeruzfbgerufbgeruzfbgerufbrefuerbfuerfberzufbguerzfbgeruzfberufberufberuzfgbeuifhgeufrhfhuiehfuiehfuefhfeuifherfreuifhiurfhefgiurgfhirufghuifhgruiefhreuifgheruifhgeuirgfheruifgheqruifhgeruifgherufgheruifgheruifgheruifgherquigferuifhgeiufghueigeiufgheuifgheuifheuirfheiufhefherufhgeruihgeuihfeiuffrfgtgghgheuzgeuzfgerf\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, empty commentBody",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"52\",\"author\": \"TesztElek\",\"commentBody\": \"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comment recipe, invalid character commentBody",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"52\",\"author\": \"TesztElek\",\"commentBody\": \"%!+\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by keyword, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(ingredients=\"[]\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes?keyword=ggetgge",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					],
					"query": [
						{
							"key": "keyword",
							"value": "ggetgge",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by keyword, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes?keyword=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					],
					"query": [
						{
							"key": "keyword",
							"value": "",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by keyword, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes?keyword=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					],
					"query": [
						{
							"key": "keyword",
							"value": "!%/",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=4444456h&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "4444456h",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, null categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=0&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "0",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, empty categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid character categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"})",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=!%/&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "!%/",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid difficultyList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=4d&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "4d",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, empty difficultyList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid character difficultyList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=!%/&costList=medium, expensive&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "!%/",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid costList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=3f&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "3f",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, empty costList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid character costList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=!%/&maxPreparationTime=100",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "!%/",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "100",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invald maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=dsd4",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "dsd4",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, null maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "0",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, empty maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "list recipe by filter, invalid character maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/filter?categoryId=3&difficultyList=easy, medium, hard&costList=medium, expensive&maxPreparationTime=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"filter"
					],
					"query": [
						{
							"key": "categoryId",
							"value": "3",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy, medium, hard",
							"description": "string[]"
						},
						{
							"key": "costList",
							"value": "medium, expensive",
							"description": "string[]"
						},
						{
							"key": "maxPreparationTime",
							"value": "!%/",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, invalid authorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=8rfrf&userId=29",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "8rfrf",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "29",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, null authorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=0&userId=29",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "0",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "29",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, empty authorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=&userId=29",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "29",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, invalid character authorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=!%/&userId=29",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "!%/",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "29",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, invalid userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=8&userId=29gffg",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "8",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "29gffg",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, null userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=8&userId=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "8",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "0",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, empty userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=8&userId=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "8",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "subscribe, invalid character userId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/subscribe?authorId=8&userId=%/=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"subscribe"
					],
					"query": [
						{
							"key": "authorId",
							"value": "8",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "%/=",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unsubscribe, invalid authorEmail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/unSubscribe?authorEmail=rerfererg@fggrg&userEmail=dipwvvzoeqxui@hthlm.com",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"unSubscribe"
					],
					"query": [
						{
							"key": "authorEmail",
							"value": "rerferrerg@fggrg"
						},
						{
							"key": "userEmail",
							"value": "dipwvviqeqxui@hthlm.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unsubscribe, empty authorEmail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/unSubscribe?authorEmail=&userEmail=dipwvvzoiqeqxui@hthlm.com",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"unSubscribe"
					],
					"query": [
						{
							"key": "authorEmail",
							"value": ""
						},
						{
							"key": "userEmail",
							"value": "dipwvvqeqxui@hthlm.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unsubscribe, invalid userEmail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/unSubscribe?authorEmail=gipsz.jakabdh@gmail.co&userEmail=fref4r4554t54t54@ftrtr",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"unSubscribe"
					],
					"query": [
						{
							"key": "authorEmail",
							"value": "gipsz.jakabdh@gmail.co"
						},
						{
							"key": "userEmail",
							"value": "fref4r4554t54t54@ftrtr"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "unsubscribe, empty userEmail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/unSubscribe?authorEmail=gipsz.jakabdh@gmail.co&userEmail=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"unSubscribe"
					],
					"query": [
						{
							"key": "authorEmail",
							"value": "gipsz.jakabdh@gmail.co"
						},
						{
							"key": "userEmail",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "profile picture, invalid username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "ewfewf4f53454fr",
							"description": "text",
							"type": "text"
						},
						{
							"key": "profilePicture",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/profile.jpg"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/users/saveProfilePicture",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"saveProfilePicture"
					]
				}
			},
			"response": []
		},
		{
			"name": "profile picture, empty username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "",
							"description": "text",
							"type": "text"
						},
						{
							"key": "profilePicture",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/profile.jpg"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/users/saveProfilePicture",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"saveProfilePicture"
					]
				}
			},
			"response": []
		},
		{
			"name": "profile picture, invalid file type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "dipwvvzougqiqeqxui@hthlm.com",
							"description": "text",
							"type": "text"
						},
						{
							"key": "profilePicture",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/test_pdf.pdf"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/users/saveProfilePicture",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"saveProfilePicture"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe as favourite, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/addToFavorites/d4r4",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"addToFavorites",
						"d4r4"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe as favourite, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/addToFavorites/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"addToFavorites",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe as favourite, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401, 403 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 403, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/addToFavorites/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"addToFavorites",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe as favourite, invalaid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/addToFavorites/!%",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"addToFavorites",
						"!%"
					]
				}
			},
			"response": []
		},
		{
			"name": "saved recipes, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/getSavedRecipes?recipeIdList=525353535",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"getSavedRecipes"
					],
					"query": [
						{
							"key": "recipeIdList",
							"value": "525353535",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "saved recipes, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/getSavedRecipes?recipeIdList=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"getSavedRecipes"
					],
					"query": [
						{
							"key": "recipeIdList",
							"value": "0",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "saved recipes, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/getSavedRecipes?recipeIdList=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"getSavedRecipes"
					],
					"query": [
						{
							"key": "recipeIdList",
							"value": "0",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "saved recipes, invalid character signs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/getSavedRecipes?recipeIdList=!%",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"getSavedRecipes"
					],
					"query": [
						{
							"key": "recipeIdList",
							"value": "!%",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "saved recipes, invalid character number and letter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/getSavedRecipes?recipeIdList=54f",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"getSavedRecipes"
					],
					"query": [
						{
							"key": "recipeIdList",
							"value": "54f",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "remove saved, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/removeFromSavedRecipes?recipeId=erg54",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"removeFromSavedRecipes"
					],
					"query": [
						{
							"key": "recipeId",
							"value": "erg54"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "remove saved, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/removeFromSavedRecipes?recipeId=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"removeFromSavedRecipes"
					],
					"query": [
						{
							"key": "recipeId",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "remove saved, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/removeFromSavedRecipes?recipeId=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"removeFromSavedRecipes"
					],
					"query": [
						{
							"key": "recipeId",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "remove saved, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/removeFromSavedRecipes?recipeId=!%",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"removeFromSavedRecipes"
					],
					"query": [
						{
							"key": "recipeId",
							"value": "!%"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete recipe, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/14ff",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"14ff"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete recipe, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete recipe, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "delete recipe, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/!%",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"!%"
					]
				}
			},
			"response": []
		},
		{
			"name": "activate recipe, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/reactivate/14fgd",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"reactivate",
						"14fgd"
					]
				}
			},
			"response": []
		},
		{
			"name": "activate recipe, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/reactivate/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"reactivate",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "activate recipe, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401, 403 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 403, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/reactivate/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"reactivate",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "activate recipe, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/reactivate/+!",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"reactivate",
						"+!"
					]
				}
			},
			"response": []
		},
		{
			"name": "add category, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/categories",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "add category, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"%/\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/categories",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "!%/",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "!%/",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, long title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt receptggrgtg gtgtgtggtgrtgtgtgtgtgegneguih378tzh37bbgberbgerzugbebegberberzuferzfverzuverzuervzuervbuervrfgzrfzervzeurverzuerzereefreuzfgeruzfverfverferbfezfverzverzvefzervferggt",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom vehbjhbhbfwhfbehfberhbfvefbrehjfrzufbvzurfghbwvurzfighrwbuirwfhrwiufgwgrhbiuwrghwriuguirwhfgwriufghwruigruigwruirgugferzureghrebgeruzgerwiuziugfwruzfwrufirbuzgfwrzurwfgzurfgeruzfgrwzufgeruzfgeruzfgeruzgrzufgrwzufgruzfgrefuzrgfqwzgfuzwrfgwruzfgrzufrzufgrwzfgrzfgzrwugfzurgfrzufgeuzzfgzuergfzuergfzure",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, short title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "a",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "a",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "!%/",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, long description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept. rhbehbehebghebgebghebgegbegbgberbriugbeaghagjebgnuiehgughfuehguitegheuhrugregeuheruigher38th358t5hueihghgghegggtgrthgeugihegueghegheg89gz3h9g83g83h8h89hgeuhgeghgeuigheuhgeuhguihguihguuihguhgiuhguighuhdghughuh8gu8geugh89tuhuighegheugheuigheughergheghegheiugheuigheiugheiugheuigheugheuguihguiehguiethguiehgeugheuighegheughuighuighuirtghuighghuighetughtughetgetughtug85zt859th458th58th4589h85ghugh4ghuhguhuhghguihgiughtuightuightuightughtughiughrtughgut",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, short description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "a",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty subtitle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character subtitle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "!%/",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, long subtitle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom vehbjhbhbfwhfbehfberhbfvefbrehjfrzufbvzurfghbwvurzfighrwbuirwfhrwiufgwgrhbiuwrghwriuguirwhfgwriufghwruigruigwruirgugferzureghrebgeruzgerwiuziugfwruzfwrufirbuzgfwrzurwfgzurfgeruzfgrwzufgeruzfgeruzfgeruzgrzufgrwzufgruzfgrefuzrgfqwzgfuzwrfgwruzfgrzufrzufgrwzfgrzfgzrwugfzurgfrzufgeuzzfgzuergfzuergfzure",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, short subtitle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "a",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid difficulty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy34r434f3rfr",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty difficulty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character difficulty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "!%/",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty prepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, null prepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "0",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, long prepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10444565464657566656646",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character prepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "%/=",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid prepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10554fggt",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, negative prepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "-1",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid cost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium34534535tferf",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty cost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character cost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "!%/",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty ingredients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid character ingredients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "!%/",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, long ingredients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "fnjgtbhgerbfrezugezfbverzferbfzuergfzerufgerzfgerzufgzufgerfzuergfzurefgguzfgerzgferuzfgerfugrefzerugferfgerf7erfg34f7fgbfzrgferfzgrebfzerufgerfzuergferzufg",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, short ingredients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "a",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty pubTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, negative pubTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "-2024-08-14T1-6:20:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid numbers pubTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "9999-08-14T99:20:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid letters pubTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "ggff-08-14T16:20:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2ffdfreferg",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, empty categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, negative categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "-1",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, null categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "0",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, long categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "254633657777",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "add recipe, invalid file type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text",
							"disabled": true
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text",
							"disabled": true
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text",
							"disabled": true
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text",
							"disabled": true
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text",
							"disabled": true
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text",
							"disabled": true
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text",
							"disabled": true
						},
						{
							"key": "publishingTime",
							"value": "2024-08-14T16:20:00",
							"type": "text",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/test_pdf.pdf"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes"
					]
				}
			},
			"response": []
		},
		{
			"name": "update recipe, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-09-14T16:25:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes/update/15r",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"update",
						"15r"
					]
				}
			},
			"response": []
		},
		{
			"name": "update recipe, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-09-14T16:25:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes/update/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"update",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "update recipe, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401, 403 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 403, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-09-14T16:25:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes/update/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"update",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update recipe, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "Teszt recept",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Ez egy teszt recept.",
							"type": "text"
						},
						{
							"key": "subtitle",
							"value": "Juj de finom",
							"type": "text"
						},
						{
							"key": "difficulty",
							"value": "easy",
							"type": "text"
						},
						{
							"key": "preparationTime",
							"value": "10",
							"type": "text"
						},
						{
							"key": "cost",
							"value": "medium",
							"type": "text"
						},
						{
							"key": "ingredients",
							"value": "semmi",
							"type": "text"
						},
						{
							"key": "publishingTime",
							"value": "2024-09-14T16:25:00",
							"type": "text"
						},
						{
							"key": "categoryId",
							"value": "2",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/simon/Desktop/PROJEKT/0 Postman/V2/Image.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}/api/recipes/update/!%",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"update",
						"!%"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe ratings, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/ratings/52d",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"ratings",
						"52d"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe ratings, null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/ratings/0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"ratings",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe ratings, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/ratings/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"ratings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe ratings, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/ratings/!%",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"ratings",
						"!%"
					]
				}
			},
			"response": []
		},
		{
			"name": "recipe ratings by user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/ratings?recipeId=52&userId=29",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"ratings"
					],
					"query": [
						{
							"key": "recipeId",
							"value": "52",
							"description": "number"
						},
						{
							"key": "userId",
							"value": "29",
							"description": "number"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "rating a recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"recipeId\": \"52\", \"userId\": \"29\", \"rating\": \"5\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/ratings",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"ratings"
					]
				}
			},
			"response": []
		},
		{
			"name": "what to cook, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/whattocook?ingredients=ffref4",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"whattocook"
					],
					"query": [
						{
							"key": "ingredients",
							"value": "ffref4",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "what to cook, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/whattocook?ingredients=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"whattocook"
					],
					"query": [
						{
							"key": "ingredients",
							"value": "",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "what to cook, invalid character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/whattocook?ingredients=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"whattocook"
					],
					"query": [
						{
							"key": "ingredients",
							"value": "!%/",
							"description": "string list"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?page=frferfe",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "frferfe",
							"description": "number"
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, null page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?page=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"description": "number"
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?page=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number"
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?page=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "!%/",
							"description": "number"
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?size=545446643",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "545446643",
							"description": "number"
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, null size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?size=0",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "0",
							"description": "number"
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?size=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number"
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character size",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?size=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "!%/",
							"description": "number"
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?sort=fergrtt54tr45t5t54g4g54t5",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "fergrtt54tr45t5t54g4g54t5",
							"description": "string"
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?sort=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string"
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?sort=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "!%/",
							"description": "string"
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?categoryId=asian44443543535t",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian44443543535t",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?categoryId=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character categoryId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?categoryId=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "!%/",
							"description": "string"
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid difficultyList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?difficultyList=easy434343",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy434343",
							"description": "string list"
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty difficultyList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?difficultyList=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "",
							"description": "string list"
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character difficultyList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?difficultyList=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "!%/",
							"description": "string list"
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid costList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?costList=554t456t54",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "554t456t54",
							"description": "string list"
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty costList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?costList=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list"
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character costList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?costList=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "!%/",
							"description": "string list"
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?maxPreparationTime=rfefref43r3",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "rfefref43r3",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, empty maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?maxPreparationTime=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "",
							"description": "string"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pagination, invalid character maxPrepTime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/recipes/pagination?maxPreparationTime=!%/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"recipes",
						"pagination"
					],
					"query": [
						{
							"key": "page",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"description": "number",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"description": "string",
							"disabled": true
						},
						{
							"key": "categoryId",
							"value": "asian",
							"description": "string",
							"disabled": true
						},
						{
							"key": "difficultyList",
							"value": "easy",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "costList",
							"value": "",
							"description": "string list",
							"disabled": true
						},
						{
							"key": "maxPreparationTime",
							"value": "!%/",
							"description": "string"
						}
					]
				}
			},
			"response": []
		}
	]
}