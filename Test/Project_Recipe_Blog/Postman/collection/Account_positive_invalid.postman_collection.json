{
	"info": {
		"_postman_id": "f2cd0db-9c15-4c7d-8ba4-23bb411f2d",
		"name": "Account, positive, invalid",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34959014"
	},
	"item": [
		{
			"name": "registration, empty email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"\",\"password\": \"tesztelek1234\",\"name\": \"Teszt Elek\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, no AT email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipwvrgrgrgfegregregvzougqlm.com\",\"password\": \"tesztelek1234\",\"name\": \"Teszt Elek\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, no point email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipwvvgzhzhzqiqeqxi@htcom\",\"password\": \"tesztelek1234\",\"name\": \"Teszt Elek\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, invalid character email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"ogqiqxui@hthlm.!%/\",\"password\": \"tesztelek1234\",\"name\": \"Teszt Elek\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, empty password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipwv@hthlm.com\",\"password\": \"\",\"name\": \"Teszt Elek\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, sort password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipwvvzougqqeq@hthlm.com\",\"password\": \"a\",\"name\": \"Teszt Elek\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, empty name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"diwiqeqxui@hthlm.com\",\"password\": \"tesztelek1234\",\"name\": \"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration, invalid character name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipxui@hthl.com\",\"password\": \"tesztelek1234\",\"name\": \"!%/\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/registration",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "confirm registration, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/auth/confirm-registration?token=frewfr",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"confirm-registration"
					],
					"query": [
						{
							"key": "token",
							"value": "frewfr"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "confirm registration, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/auth/confirm-registration?token=",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"confirm-registration"
					],
					"query": [
						{
							"key": "token",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login email for jwt token, empty email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"\",\"password\": \"teszt1234\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login email for jwt token, invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipwvvzougqiqeqxuihthlm.fer\",\"password\": \"teszt1234\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login email for jwt token, empty password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dipwv@hthlm.com\",\"password\": \"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login email for jwt token, invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"dip@hthlm.com\",\"password\": \"teszt1234vfffvff\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/auth/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "validate jwt token, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/auth/validate-token",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"validate-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "validate jwt token, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "ffr4fgrgr",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/auth/validate-token",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"validate-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout, empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/auth/logout",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout, invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "ff43",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/auth/logout",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "users me, empty token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/me",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "users me, invalid token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "rf34f443",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/users/me",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "change password, not the same",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"firstPassword\": \"teszt1234\", \"secondPassword\": \"ed3r342ref\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/users/editPassword",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"editPassword"
					]
				}
			},
			"response": []
		},
		{
			"name": "change password, short",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400, 401 or 500\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 401, 500]);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_token_v2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"firstPassword\": \"a\", \"secondPassword\": \"a\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/users/editPassword",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"users",
						"editPassword"
					]
				}
			},
			"response": []
		}
	]
}